As sent by Dmitry in a previous mail :
The service description.
1. Each file has "supervised" property. You can get the list of files (their metadata) by GET query /rest//Items?path=/path/to/parent/dir in JSON or XML format
path parameter shall point to parent directory. The result is the matadata for all files which are located under this parent dir or any subdirectory located in this dir.

2. To set "supervised" property for all files located under a specified directory a client shall send PUT query with URL /rest//Items/TRUE?path=/path/to/parent/dir

3. To reset "supervised" property for all files located under a specified directory a client shall send PUT query with URL /rest//Items/FALSE?path=/path/to/parent/dir

4.To get a metadata in JSON or XML format for a file specified by its UID a client shall send GET query with URL  /rest/Item/{uid} where uid is file unique identifier

5. To set "supervised" flag for a specific file  a client shall send PUT query with URL  /rest/Item/{uid}/supervised/{flag} where uid is file unique identifier and flag is TRUE or FALSE

6. PUT /rest/Item/{uid}/checksum/{checksum} sets checksum (checksum is an integer)

7. PUT /{uid}/lastValidationDate/{lastValidationDate} sets lastValidationDate (lastValidationDate is a number of seconds from 0-date)

LastValidationDate is integer, not DateTime! Take it as a generic Integer property, however I assume it is number of milliseconds from 0-date.

The file properties can also be set/get using PROPFIND/PROPPATCH WebDAV command. They are located under "custom:" namespace  and have names:
dri-supervised
dri-checksum
dri-last-validation-date-ms




-18/02/13


    The REST-services are protected in the same way as WebDAV. You have to provide valid credentials in order to call them.
    The access to the metadata provided by REST-services are protected in the same way as access to the actual data from WebDAV. If a client has read privileges then it can see the metadata, if write then can modify them.
    The "data-distribution" property for a folder contains JSON with individual distribution for each file with file names as the keys.
    the API to the REST services was changed:

- GET http://.../rest/items/query?{path=..} - the same as was available by http://host/lobcder/rest/Items?path=/path/to/parent/dir
The result is the metadata for all files, which are located under this parent directory, and it’s subdirectories.

- GET http://.../rest/items/dri/supervised/{true/false}?{path=} 
returns metadata for all files, which are located under this parent directory, and it’s subdirectories which have supervised property set to true or false
- PUT  http://.../rest/items/dri/supervised/{true/false}?{path=} - the same as http://host/lobcder/rest/Items/{TRUE/FALSE}?path=/path/to/parent/dir
sets/resets "supervised" property for all files located under a specified directory

the former service did not change metadata for the directories itself. The current one changes

- PUT  http://.../rest/items/permissions?path=/path/to/parent/dir
sets new permissions for  all files, which are located under this parent directory, and it’s subdirectories. The argument to pass is XML or JSON with new permissions (a format for this XML can be seen in result of  http://.../rest/items/query?{path=..} query)

- GET http://.../rest/item/query/{uid} - returns metadata for file with uid ID
- GET http://.../rest/item/data/{uid}  - redirects user agent to the WebDAV file with uid ID
- GET http://.../rest/item/dri/{uid}/supervised - returns value of supervised  property for file with uid ID
- PUT http://.../rest/item/dri/{uid}/supervised/{flag}/ - sets/resets supervised  property for file with uid ID (flag = TRUE or FALSE)
- GET http://.../rest/item/dri{uid}/checksum/ - returns value of checksum property  for file with uid ID
- PUT http://.../rest/item/dri/{uid}/checksum/{checksum}/ sets checksum property  for file with uid ID
- GET http://.../rest/item/dri/{uid}/lastValidationDate/ - returns value of lastValidationDate property  for file with uid ID
- PUT http://.../rest/item/dri/ {uid}/lastValidationDate/{lastValidationDate}/ -  sets lastValidationDate property  for file with uid ID
- GET http://.../rest/item/permissions/{uid}/ - returns permissions for a file (or folder) by its uid
- PUT  http://.../rest/item/permissions//{uid}/ - sets new permissions for the file specified by its uid. The argument to pass is XML or JSON with new permissions (see GET) 