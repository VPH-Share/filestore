<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>lobcder</display-name>
    <!-- This component has a dependency on an external resource-->
    <resource-ref>
        <description>DB Connection Pooling</description>
        <res-ref-name>jdbc/lobcderDB2</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    
    <servlet>
        <servlet-name>ProtectedREST</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>nl.uva.cs.lobcder.rest</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>UnprotectedREST</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>nl.uva.cs.lobcder.urest</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProtectedREST</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>UnprotectedREST</servlet-name>
        <url-pattern>/urest/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>BasicAuthFilter</filter-name>
        <filter-class>nl.uva.cs.lobcder.frontend.BasicAuthFilter</filter-class>
    </filter>
    
    <filter>
        <filter-name>MyFilter</filter-name>
        <filter-class>nl.uva.cs.lobcder.frontend.MyFilter</filter-class>

        <!-- This param shows how to exclude certain paths from the MiltonFilter -->
        <!-- These paths will "fall through" the filter and be handled as normal servlet resources -->
        <!--        <init-param>
            <param-name>milton.exclude.paths</param-name>
            <param-value>/,/rest/</param-value>
        </init-param>-->
        <init-param>
            <param-name>resource.factory.class</param-name>
            <param-value>nl.uva.cs.lobcder.webDav.resources.WebDataResourceFactory</param-value>
        </init-param>
        <init-param>
            <param-name>milton.configurator</param-name>
            <param-value>nl.uva.cs.lobcder.frontend.MyMiltonConfigurator</param-value>
        </init-param>
    </filter>
    
    
<!--    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>nl.uva.cs.lobcder.frontend.WebDavCompliantCorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.methods</param-name>

            <param-value>GET,POST,HEAD,OPTIONS,PUT,PROPFIND,PROPPATCH,COPY,MOVE,LOCK,UNLOCK,MKCOL</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.headers</param-name>

            <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization</param-value>
        </init-param>
    </filter> -->
    
    
    <filter-mapping>
        <filter-name>MyFilter</filter-name>
        <url-pattern>/dav/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>BasicAuthFilter</filter-name>
        <servlet-name>ProtectedREST</servlet-name>
    </filter-mapping>    
    
    <!--    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    
    
    
<!--    <filter>
        <filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>

     JAVA MELODY MONITOR ACCESS 
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>Monitoring</realm-name>
    </login-config>
    <security-role>
        <role-name>monitoring</role-name>
    </security-role>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Monitoring</web-resource-name>
            <url-pattern>/monitoring</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>monitoring</role-name>
        </auth-constraint>
    </security-constraint>-->
    
    
</web-app>
