\documentclass[a4paper,10pt]{article}
%\documentclass[a4paper,10pt]{scrartcl}

\usepackage[utf8]{inputenc}
\usepackage{listings}

\title{LOBCDER configuration instructions}
\author{S. Koulouzis}
\date{}

\pdfinfo{%
  /Title    ()
  /Author   ()
  /Creator  ()
  /Producer ()
  /Subject  ()
  /Keywords ()
}


\begin{document}
\maketitle
This is are some basic instruction on how to configure and deploy LOBCDER 

\section{Create and configure the logical file system}
LOBCDER uses MySQL to store and query the logical file system.

\subsection{Create and configure MySQL DB}
Connect to the local database server as root.

\begin{lstlisting}
$mysql -h localhost  -u root -p
$mysql> create database mydb;
\end{lstlisting}


Now we create the user 'username' and give him super permissions on the new database. SUPER is required for 
enabling the delete and replicate triggers\footnote{When LOBCDER is asked to delete a file it simplly removes it 
from it's logical file system, and scheules a deletion of the physical files which will run at a later time 
asychonuslly. The same applies for replication} (for mysql version 5.0.95). 
\begin{lstlisting}
$mysql>grant ALL PRIVILEGES on mydb.* to username@localhost identified by 'password';
$mysql>GRANT SUPER ON *.* to username@localhost IDENTIFIED by 'password';
\end{lstlisting}


\subsection{Initialize the logical file system and the triggers}
You may want to edit the init.sql file to include the proper backends. These will be used by lobcder to hold the physical data.

in the init.sql add or edit this line: 

\begin{lstlisting}
INSERT INTO  credential_table(username, password) 
			  VALUES ('backend_username', 'backend_password');
SET @credID = LAST_INSERT_ID();

INSERT INTO 
	  storage_site_table(resourceURI, 
			     credentialRef, 
			     currentNum, 
			     currentSize, 
			     quotaNum, 
			     quotaSize)
			     VALUES('schema://HOST:PORT/PATH/', 
			     @credID, -1, -1, -1, -1);
\end{lstlisting}

Run the init.sql script as 'username' (Before running the script you may want to read Section \ref{sec:auth} to configure authentication and authorization): 

\begin{lstlisting}
mysql --user=username --password=password mydb < init.sql
\end{lstlisting}

\section{Configure LOBCDER to connect to the DB}
In the META-INF/context.xml file edit or add this line:

\begin{lstlisting}
<Resource auth="Container" driverClassName="com.mysql.jdbc.Driver" 
			  maxActive="100" 
			  maxIdle="30" 
			  maxWait="10000" 
			  name="jdbc/mydb" 
			  password="password"
			  removeAbandoned="true"
			  removeAbandonedTimeout="30" 
			  type="javax.sql.DataSource" 
			  url="jdbc:mysql://localhost:3306/mydb" 
			  username="username"/>
\end{lstlisting}

In the WEB-INF/web.xml file edit or add this line:
\begin{lstlisting}
    <resource-ref>
        <description>DB Connection Pooling</description>
        <res-ref-name>jdbc/mydb</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
\end{lstlisting}

\section{User Authorization / Authentication and Roles}\label{sec:auth}

If you want to configure the user roles to have right on the root directory, in the init.sql add or edit this line: 

\begin{lstlisting}
INSERT INTO permission_table (perm_type, ld_uid_ref, role_name) 
	VALUES  ('read', @rootID, 'role1'),
	('write', @rootID, 'role1'),
	('root', @rootID, 'role2'),
	('read', @rootID, 'admin'),
	('write', @rootID, 'admin');
\end{lstlisting}

To enable authorization and authentication based on the biotown accounts, in the context.xml file edit or add this line to include the ticket validation service:

\begin{lstlisting}
<Resource auth="Container" 
    factory="org.apache.naming.factory.BeanFactory" 
    name="bean/auth" 
    serviceURL="https://masterinterface.vph-share.eu/validatetkt/?ticket="
    type="nl.uva.cs.lobcder.auth.AuthRemote"/>  
\end{lstlisting}

To also enable authorization and authentication based on local accounts, i.e. account created and kept on the local DB, log-in the DB: 
\begin{lstlisting}
$mysql -h localhost  -u root -p
$mysql>INSERT INTO lobcder.auth_usernames_table (token, uname) 
      VALUES ('user_password', 'username');
$mysql> use mydb database;
$mysql> select * from auth_usernames_table;
\end{lstlisting}

Take the user ID\_NUM from the auth\_usernames\_table table and type:
\begin{lstlisting}
$mysql>INSERT INTO lobcder.auth_roles_tables (role_name, uname_id)
    VALUES ('role1', ID_NUM);
\end{lstlisting}

% \section{Deploy LOBCDER}
% 
% LOBCDER is tested on apache-tomcat-6.0.33 but you can deploy the war file on any application server such as glassfish etc. 
% 
% \subsection{Using NetBeans}
% Build the project and run it. To specify an application server see http://wiki.netbeans.org/AddExternalTomcat

\end{document}
